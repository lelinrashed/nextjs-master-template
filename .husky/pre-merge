branch=$(git rev-parse --abbrev-ref HEAD)

# If the branch is not main or master, then we can merge
if [ "$branch" != "main" ] && [ "$branch" != "master" ]; then
    exit 0
fi

# If the branch is main or master, then we need go through some checks

# Check if the main or master branch is behind the current branch
git fetch --all
git pull origin $branch

# If the main or master branch is ahead, then we need to rebase
if [ $(git rev-list --count $branch..origin/$branch) -ne 0 ]; then
    echo "The $branch branch is ahead of main or master. Please rebase your branch."
    exit 1
fi

# Lint and test your code before you commit
npm run lint
if [ $? -ne 0 ]; then
  echo "\033[1;31mLint failed!\033[0m Please fix the issues and try again."
  exit 1
fi

npm run test
if [ $? -ne 0 ]; then
  echo "\033[1;31mTests failed!\033[0m Please fix the issues and try again."
  exit 1
fi

# If everything is good, then we can merge
exit 0
